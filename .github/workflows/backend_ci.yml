name: Backend CI (test → build → push)

on:
  push:
    branches: [ main, ci-run ]
  pull_request:

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}   # mohit123.azurecr.io
  ACR_NAME: ${{ secrets.ACR_NAME }}                   # mohit123
  IMAGE_NAME: week07-product-service

jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/product_service
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt
      - run: pip install flake8 pytest
      - run: flake8 .
      - run: python -m pytest -q

  build_and_push:
    needs: [test_and_lint]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Print ACR context
        run: |
          echo "ACR_LOGIN_SERVER=${{ env.ACR_LOGIN_SERVER }}"
          echo "ACR_NAME=${{ env.ACR_NAME }}"
          az --version

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: ACR login (az)
        run: az acr login --name $ACR_NAME

      - name: Docker login fallback
        if: failure()
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & push backend image
        uses: docker/build-push-action@v6
        with:
          context: ./backend/product_service
          file: ./backend/product_service/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
